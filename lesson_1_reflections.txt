How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    *It took me a short time to find out the diffrence between the two versions .I believe
this is a great and effective way of finding out bugs .

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    *This is a great way to see the point where we missed a certain point of idea .Some codes
can be used again and again for other purposes and it will be helpfull to review older steps 
rather that the final projects.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    *As manuay commiting is donr by personal judgment one can commit too often and make the history of 
the commit hard to understand or read. But the best thing is we can choose to commit the versions based on logical 
changes that can affect our projects.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    *I think even though Git saves multiple 

How can you use the commands git log and git diff to view the history of files?

    *Both commands are usefull in identifying the multiple commits of a version for a single file or multiple files.
And also identifying the diffrence between the commits.



How might using version control make you more confident to make changes that
could break something?

    * I have learned that verion control is essentioal finding the changes that can make our programs fail
to meet the intended purpose.

Now that you have your workspace set up, what do you want to try using Git for?

    I would like to use git for Commiting  my versions so that I can recall the bug when ever I encountered one.
In the future I want to manage my future projects using Git.